select(npi, integration)
MD_int$npi = as.character(MD_int$npi)
# Create instrument
price_shock <- puf_yearly  %>%
inner_join(tax_base, by="npi") %>%
inner_join(pfs_yearly %>%
select(hcpcs, dprice_rel_2010, price_nonfac_orig_2010, price_nonfac_orig_2007),
by=c("hcpcs_code" = "hcpcs")) %>%
mutate_at(vars(dprice_rel_2010, price_nonfac_orig_2010, price_nonfac_orig_2007), replace_na, 0) %>%
mutate(price_shock = case_when(
year_num <= 2013 ~ ((year_num-2009)/4)*dprice_rel_2010,
year_num > 2013  ~ dprice_rel_2010),
denom = line_srvc_cnt*price_nonfac_orig_2010,
numer = price_shock*line_srvc_cnt*price_nonfac_orig_2010) %>%
group_by(npi) %>%
summarize(phy_numer=sum(numer, na.rm=TRUE), phy_denom=sum(denom, na.rm=TRUE), tax_id=first(tax_id)) %>%
ungroup() %>%
mutate(phy_rev_change=phy_numer/phy_denom) %>%
group_by(tax_id) %>%
summarize(practice_rev_change=sum(phy_rev_change, na.rm=TRUE)) %>%
ungroup() %>%
inner_join(tax_base, by="tax_id") %>%
select(practice_rev_change, npi)
# Merge physician claims and integration and add it to the list
if (year_num == 2012){
MD_not_int = MD_int %>% filter(integration == 0)
MD_data = MD_data %>% filter(npi %in% MD_not_int$npi)
datalist[[y]] = MD_data %>%
left_join(MD_not_int, by="npi") %>%
left_join(price_shock, by="npi")
} else {
datalist[[y]] = MD_data %>%
left_join(MD_int, by="npi") %>%
left_join(price_shock, by="npi")
}
}
# Append all datasets, remove missing values, and remove other stuff
puf <- bind_rows(datalist)
rm(datalist, MD_data, MD_not_int, MD_int, pfs, price_shock,
puf_yearly, pfs_yearly, mdppas_yearly, tax_base, year_num)
### 1) Descriptive Statistics
library(stargazer)
stargazer(as.data.frame(select(puf, medicare_spending, claims, patients)), type="text")
puf %>%
select(Spending=medicare_spending, Claims=claims, Patients=patients) %>%
as.data.frame() %>%
stargazer(omit.summary.stat="n", out="../tables/summary_stats.tex")
### 3) OLS: log(claims) ~ integration
library(fixest)
puf = puf %>% filter(!is.na(integration))
puf = puf %>% filter(!is.na(practice_rev_change))
puf$lclaims = log(puf$claims)
est_X = feols(lclaims ~ integration | npi + year, puf)
etable(est_X, file="../tables/ols_integration.tex")
### 4) Robustness Checks for Omitted Variable Bias
est_X = feols(lclaims ~ integration | npi + year, puf)
est = feols(lclaims ~ integration, puf)
delta_list = c(0.5, 1, 1.5, 2)
R2max_list = c(0.5, 0.6, 0.7, 0.8, 0.9, 1)
o_beta = function(est_DX, est_D, delta=1, R2max=1){
coef_DX = est_DX$coefficients[[1]]
R2_DX = est_DX$sq.cor[[1]]
coef_D = est_D$coefficients[[2]]
R2_D = est_D$sq.cor[[1]]
coef_st = coef_DX - delta*(coef_D-coef_DX)*(R2max-R2_DX)/(R2_DX - R2_D)
return(c(coef_DX, coef_st))
}
for (delta in delta_list){
for (R2max in R2max_list){
print(o_beta(est_X, est, delta, R2max))
}
}
# IV: log(claims) ~ (integration ~ rev_change)
est_IV = feols(lclaims ~ 1 | npi + year | integration ~ practice_rev_change, puf)
etable(summary(est_IV, stage = 1:2), fitstat = ~ . + ivfall + ivwaldall.p, se.below = TRUE)
# Sensitivity Analysis for Instrumental Variables Model
est_resid = feols(integration ~ practice_rev_change | npi + year, puf)
puf$z_residuals = est_resid$residuals
est_AR = feols(lclaims ~ integration + z_residuals | npi + year, puf)
etable(est_AR)
library(tidyverse)
options(dplyr.summarise.inform = FALSE) ## Add to .Rprofile to make permanent
### 0) Read and Clean Data
data_dir = "../Data"
# PUF: Medicare spending of each physician and service
name_puf_yearly = list.files(path=paste0(data_dir, "/PUF"), pattern="*.txt", recursive=TRUE)
datalist = vector("list", length = length(name_puf_yearly))
# MD-PPAS: The Medicare Data on Provider Practice and Specialty
name_mdppas_yearly = list.files(path=paste0(data_dir, "/MDPPAS"))[c(4:9)]   # 2012 - 2017
# PFS: Physician Fee Schedule 2010 Update
pfs = read_tsv(paste0(data_dir, "/PFS_update_data.txt"))
# MD-PPAS 2009: baseline measure of the practice before the price shock takes effect
tax_base = read_csv(paste0(data_dir, "/MDPPAS/PhysicianData_2009.csv")) %>%
select(npi, tax_id=group1)
tax_base$npi = as.character(tax_base$npi)
for (y in 1:length(name_puf_yearly)){
# Get file names and year
name_mdppas = name_mdppas_yearly[y]
name_puf = name_puf_yearly[y]
year_num = as.numeric(strsplit(name_puf, "/")[[1]][1])
print(paste0("*** Analyzing year: ", year_num))
# Read MDPPAS for every year
mdppas_yearly = read_csv(paste0(data_dir, "/MDPPAS/", name_mdppas))
# Read PUF for each year
puf_yearly = read_tsv(paste0(data_dir, "/PUF/", name_puf))
names(puf_yearly) = tolower(names(puf_yearly))
# For years > 2013, use only MD not integrated in 2012
if (year_num == 2012){
pfs_yearly = pfs %>% filter(year == year_num)
puf_yearly = puf_yearly %>%
filter(
grepl("MD", nppes_credentials) |
grepl("M.D", nppes_credentials) |
grepl("M..D", nppes_credentials))
} else {
pfs_yearly = pfs %>% filter(year == 2013)
puf_yearly = puf_yearly %>% filter(npi %in% MD_not_int$npi)
}
# Calculate physician-level data
MD_data = puf_yearly %>%
select(average_medicare_allowed_amt, bene_day_srvc_cnt, bene_unique_cnt, npi) %>%
group_by(npi) %>%
summarise(
medicare_spending = sum(average_medicare_allowed_amt * bene_day_srvc_cnt),
claims = sum(bene_day_srvc_cnt),
patients = sum(bene_unique_cnt)) %>%
mutate(year = year_num)
# Calculate integration of physicians
MD_int = mdppas_yearly %>%
select(npi, pos_opd, pos_office, pos_asc) %>%
mutate(integration = ((pos_opd / (pos_opd + pos_office + pos_asc)) > 0.75) * 1) %>%
select(npi, integration)
MD_int$npi = as.character(MD_int$npi)
# Create instrument
price_shock <- puf_yearly  %>%
inner_join(tax_base, by="npi") %>%
inner_join(pfs_yearly %>%
select(hcpcs, dprice_rel_2010, price_nonfac_orig_2010, price_nonfac_orig_2007),
by=c("hcpcs_code" = "hcpcs")) %>%
mutate_at(vars(dprice_rel_2010, price_nonfac_orig_2010, price_nonfac_orig_2007), replace_na, 0) %>%
mutate(price_shock = case_when(
year_num <= 2013 ~ ((year_num-2009)/4)*dprice_rel_2010,
year_num > 2013  ~ dprice_rel_2010),
denom = line_srvc_cnt*price_nonfac_orig_2010,
numer = price_shock*line_srvc_cnt*price_nonfac_orig_2010) %>%
group_by(npi) %>%
summarize(phy_numer=sum(numer, na.rm=TRUE), phy_denom=sum(denom, na.rm=TRUE), tax_id=first(tax_id)) %>%
ungroup() %>%
mutate(phy_rev_change=phy_numer/phy_denom) %>%
group_by(tax_id) %>%
summarize(practice_rev_change=sum(phy_rev_change, na.rm=TRUE)) %>%
ungroup() %>%
inner_join(tax_base, by="tax_id") %>%
select(practice_rev_change, npi)
# Merge physician claims and integration and add it to the list
if (year_num == 2012){
MD_not_int = MD_int %>% filter(integration == 0)
MD_data = MD_data %>% filter(npi %in% MD_not_int$npi)
datalist[[y]] = MD_data %>%
left_join(MD_not_int, by="npi") %>%
left_join(price_shock, by="npi")
} else {
datalist[[y]] = MD_data %>%
left_join(MD_int, by="npi") %>%
left_join(price_shock, by="npi")
}
}
# Append all datasets, remove missing values, and remove other stuff
puf <- bind_rows(datalist)
rm(datalist, MD_data, MD_not_int, MD_int, pfs, price_shock,
puf_yearly, pfs_yearly, mdppas_yearly, tax_base, year_num)
### 1) Descriptive Statistics
library(stargazer)
stargazer(as.data.frame(select(puf, medicare_spending, claims, patients)), type="text")
puf %>%
select(Spending=medicare_spending, Claims=claims, Patients=patients) %>%
as.data.frame() %>%
stargazer(omit.summary.stat="n", out="tables/summary_stats.tex")
### 3) OLS: log(claims) ~ integration
library(fixest)
puf = puf %>% filter(!is.na(integration))
puf = puf %>% filter(!is.na(practice_rev_change))
puf$lclaims = log(puf$claims)
est_X = feols(lclaims ~ integration | npi + year, puf)
etable(est_X, file="tables/ols_integration.tex")
### 4) Robustness Checks for Omitted Variable Bias
est_X = feols(lclaims ~ integration | npi + year, puf)
est = feols(lclaims ~ integration, puf)
delta_list = c(0.5, 1, 1.5, 2)
R2max_list = c(0.5, 0.6, 0.7, 0.8, 0.9, 1)
o_beta = function(est_DX, est_D, delta=1, R2max=1){
coef_DX = est_DX$coefficients[[1]]
R2_DX = est_DX$sq.cor[[1]]
coef_D = est_D$coefficients[[2]]
R2_D = est_D$sq.cor[[1]]
coef_st = coef_DX - delta*(coef_D-coef_DX)*(R2max-R2_DX)/(R2_DX - R2_D)
return(c(coef_DX, coef_st))
}
for (delta in delta_list){
for (R2max in R2max_list){
print(o_beta(est_X, est, delta, R2max))
}
}
# IV: log(claims) ~ (integration ~ rev_change)
est_IV = feols(lclaims ~ 1 | npi + year | integration ~ practice_rev_change, puf)
etable(summary(est_IV, stage = 1:2), fitstat = ~ . + ivfall + ivwaldall.p, se.below = TRUE)
# Sensitivity Analysis for Instrumental Variables Model
est_resid = feols(integration ~ practice_rev_change | npi + year, puf)
puf$z_residuals = est_resid$residuals
est_AR = feols(lclaims ~ integration + z_residuals | npi + year, puf)
etable(est_AR)
puf %>%
select(Year=year, Spending=medicare_spending, Claims=claims, Patients=patients) %>%
group_by(Year) %>%
summarize_each(funs(mean, sd, min, max), Spending, Claims, Patients) %>%
ungroup
puf %>%
select(Year=year, Spending=medicare_spending, Claims=claims, Patients=patients) %>%
group_by(Year) %>%
summarize(c(Spending, Claims, Patients), c(mean, sd, min, max)) %>%
ungroup
puf %>%
select(Year=year, Spending=medicare_spending, Claims=claims, Patients=patients) %>%
group_by(Year) %>%
summarize(across(c(Spending, Claims, Patients), c(mean, sd, min, max))) %>%
ungroup
puf %>%
select(Year=year, Spending=medicare_spending, Claims=claims, Patients=patients) %>%
group_by(Year) %>%
summarize(across(c(Spending, Claims, Patients), c(mean, sd, min, max))) %>%
# ungroup
### 3) OLS: log(claims) ~ integration
library(fixest)
puf %>%
select(Year=year, Spending=medicare_spending, Claims=claims, Patients=patients) %>%
group_by(Year) %>%
summarize(across(c(Spending, Claims, Patients), c(mean, sd, min, max))) # %>%
puf %>%
select(Year=year, Spending=medicare_spending, Claims=claims, Patients=patients) %>%
group_by(Year) %>%
summarize(across(c(Spending, Claims, Patients), c(mean/10, sd, min, max))) # %>%
puf %>%
select(Year=year, Spending=medicare_spending, Claims=claims, Patients=patients) %>%
group_by(Year) %>%
summarize(across(c(Spending, Claims, Patients), c(mean, sd, min, max))) # %>%
for (y in 2012:2017){
puf %>%
filter(year=y) %>%
select(Spending=medicare_spending, Claims=claims, Patients=patients) %>%
as.data.frame() %>%
stargazer(omit.summary.stat="n", out="tables/summary_stats.tex")
}
library(stargazer)
for (y in 2012:2017){
puf %>%
filter(year == y) %>%
select(Spending=medicare_spending, Claims=claims, Patients=patients) %>%
as.data.frame() %>%
stargazer(omit.summary.stat="n", out="tables/summary_stats.tex")
}
puf %>%
select(Year=year, Spending=medicare_spending, Claims=claims, Patients=patients) %>%
group_by(Year) %>%
summarize(across(Spending, c(mean, sd, min, max)))
puf %>%
select(Year=year, Spending=medicare_spending, Claims=claims, Patients=patients) %>%
group_by(Year) %>%
summarize(across(Spending, c(mean, sd, min, max), c("Mean", "SD", "Min", "Max")))
puf %>%
select(Year=year, Spending=medicare_spending, Claims=claims, Patients=patients) %>%
group_by(Year) %>%
melt(variable.name = "Name", value.name = "Amount") %>%
group_by(Name) %>%
summarize(across(Amount, c(mean, sd, min, max)))
puf %>%
select(Year=year, Spending=medicare_spending, Claims=claims, Patients=patients) %>%
pivot_longer(c(Spending, Claims, Patients), names_to = "Amount")
puf %>%
select(Year=year, Spending=medicare_spending, Claims=claims, Patients=patients) %>%
pivot_longer(c(Spending, Claims, Patients))
puf %>%
select(Year=year, Spending=medicare_spending, Claims=claims, Patients=patients) %>%
pivot_longer(c(Spending, Claims, Patients), names_to="Variable", values_to="Value") %>%
group_by(Year, Variable) %>%
summarize(across(Value, c(mean, sd, min, max)))
puf %>%
select(Year=year, Spending=medicare_spending, Claims=claims, Patients=patients) %>%
pivot_longer(c(Spending, Claims, Patients), names_to="Variable", values_to="Value") %>%
group_by(Year, Variable) %>%
summarize(
Mean = mean(Value),
SD = sd(Value),
Min = min(Value),
Max = max(Value))
puf %>%
select(Year=year, Spending=medicare_spending, Claims=claims, Patients=patients) %>%
pivot_longer(c(Spending, Claims, Patients), names_to="Variable", values_to="Value") %>%
group_by(Variable, Year) %>%
summarize(
Mean = mean(Value),
SD = sd(Value),
Min = min(Value),
Max = max(Value))
stargazer(sum_stats, summary=FALSE, rownames=FALSE)
sum_stats = puf %>%
select(Year=year, Spending=medicare_spending, Claims=claims, Patients=patients) %>%
pivot_longer(c(Spending, Claims, Patients), names_to="Variable", values_to="Value") %>%
group_by(Variable, Year) %>%
summarize(
Mean = mean(Value),
SD = sd(Value),
Min = min(Value),
Max = max(Value))
stargazer(sum_stats, summary=FALSE, rownames=FALSE)
library(stargazer)
sum_stats = puf %>%
select(Year=year, Spending=medicare_spending, Claims=claims, Patients=patients) %>%
pivot_longer(c(Spending, Claims, Patients), names_to="Variable", values_to="Value") %>%
group_by(Variable, Year) %>%
summarize(
Mean = mean(Value),
SD = sd(Value),
Min = min(Value),
Max = max(Value))
stargazer(sum_stats, summary=FALSE, rownames=FALSE, out="tables/summary_stats.tex")
etable(est_AR)
est_AR
est_IV
### 5) IV: log(claims) ~ (integration ~ rev_change)
est_IV = feols(lclaims ~ 1 | npi + year | integration ~ practice_rev_change, puf)
etable(summary(est_IV, stage = 1:2), fitstat = ~ . + ivfall + ivwaldall.p, se.below = TRUE)
est_IV
### 5) IV: log(claims) ~ (integration ~ rev_change)
est_IV = feols(lclaims ~ 1 | npi + year | integration ~ practice_rev_change, puf)
etable(summary(est_IV, stage = 1:2), fitstat = ~ . + ivfall + ivwaldall.p, se.below = TRUE)
est_AR = feols(lclaims ~ practice_rev_change | npi + year, puf)
etable(est_AR)
puf$practice_rev_change(1:10)
puf$practice_rev_change[1:10]
sample(puf$practice_rev_change[1:10])
replicate(3, sample(puf$practice_rev_change[1:10]))
mean(replicate(3, sample(puf$practice_rev_change[1:10])))
colMeans(replicate(3, sample(puf$practice_rev_change[1:10])))
colMRows(replicate(3, sample(puf$practice_rev_change[1:10])))
colRows(replicate(3, sample(puf$practice_rev_change[1:10])))
colMeans(replicate(3, sample(puf$practice_rev_change[1:10])), dim=2)
colMeans(replicate(3, sample(puf$practice_rev_change[1:10])), dims=2)
rowMeans(replicate(3, sample(puf$practice_rev_change[1:10])))
### 8) Shift-share instrument
s = 100
puf$random_rev_change = rowMeans(replicate(s, sample(puf$practice_rev_change)))
puf$center_rev_change = puf$practice_rev_change - puf$random_rev_change
est_SS = feols(lclaims ~ 1 | npi + year | integration ~ center_rev_change, puf)
etable(est_SS, se.below = TRUE)
### 8) Shift-share instrument
puf$random_rev_change = rowMeans(replicate(100, sample(puf$practice_rev_change)))
puf$center_rev_change = puf$practice_rev_change - puf$random_rev_change
est_SS = feols(lclaims ~ 1 | npi + year | integration ~ center_rev_change, puf)
etable(est_SS, se.below = TRUE, file="tables/ssiv_integration.tex")
### 5) IV: log(claims) ~ (integration ~ rev_change)
est_IV = feols(lclaims ~ 1 | npi + year | integration ~ practice_rev_change, puf)
etable(summary(est_IV, stage = 1:2),
fitstat = ~ . + ivfall + ivwaldall.p, se.below = TRUE,
file = "tables/iv_integration.tex")
library(stargazer)
sum_stats = puf %>%
select(Year=year, Spending=medicare_spending, Claims=claims, Patients=patients) %>%
pivot_longer(c(Spending, Claims, Patients), names_to="Variable", values_to="Value") %>%
group_by(Variable, Year) %>%
summarize(
Mean = mean(Value),
SD = sd(Value),
Min = min(Value),
Max = max(Value))
stargazer(sum_stats, summary=FALSE, rownames=FALSE, out="tables/summary_stats.tex")
### 3) OLS: log(claims) ~ integration
library(fixest)
puf = puf %>% filter(!is.na(integration))
puf = puf %>% filter(!is.na(practice_rev_change))
puf$lclaims = log(puf$claims)
est_X = feols(lclaims ~ integration | npi + year, puf)
etable(est_X, file="tables/ols_integration.tex")
### 4) Robustness Checks for Omitted Variable Bias
est_X = feols(lclaims ~ integration | npi + year, puf)
est = feols(lclaims ~ integration, puf)
delta_list = c(0.5, 1, 1.5, 2)
R2max_list = c(0.5, 0.6, 0.7, 0.8, 0.9, 1)
o_beta = function(est_DX, est_D, delta=1, R2max=1){
coef_DX = est_DX$coefficients[[1]]
R2_DX = est_DX$sq.cor[[1]]
coef_D = est_D$coefficients[[2]]
R2_D = est_D$sq.cor[[1]]
coef_st = coef_DX - delta*(coef_D-coef_DX)*(R2max-R2_DX)/(R2_DX - R2_D)
return(c(coef_DX, coef_st))
}
for (delta in delta_list){
for (R2max in R2max_list){
print(o_beta(est_X, est, delta, R2max))
}
}
### 5) IV: log(claims) ~ (integration ~ rev_change)
est_IV = feols(lclaims ~ 1 | npi + year | integration ~ practice_rev_change, puf)
etable(summary(est_IV, stage = 1:2),
fitstat = ~ . + ivfall + ivwaldall.p, se.below = TRUE,
file = "tables/iv_integration.tex")
### 6) Durbin-Wu-Hausman test
# est_resid = feols(integration ~ practice_rev_change | npi + year, puf)
# puf$z_residuals = est_resid$residuals
# est_DWH = feols(lclaims ~ practice_rev_change + z_residuals | npi + year, puf)
# etable(est_DWH)
est_IV
### 7) Anderson-Rubin test
est_AR = feols(lclaims ~ practice_rev_change | npi + year, puf)
est_AR
# Since the F-stat > 100, we do not need to adjust
### 8) Shift-share instrument
puf$random_rev_change = rowMeans(replicate(100, sample(puf$practice_rev_change)))
puf$center_rev_change = puf$practice_rev_change - puf$random_rev_change
est_SS = feols(lclaims ~ 1 | npi + year | integration ~ center_rev_change, puf)
etable(est_SS, se.below = TRUE, file="tables/ssiv_integration.tex")
df_beta = data.frame(matrix(ncol = 5, nrow = 0))
colnames(df_beta) = R2max_list
rownames(df_beta) = delta_list
df_beta = data.frame(matrix(ncol = length(R2max_list), nrow = length(delta_list)))
colnames(df_beta) = R2max_list
rownames(df_beta) = delta_list
View(df_beta)
View(df_beta)
o_beta(est_X, est, delta, R2max)
toString(o_beta(est_X, est, delta, R2max))
o_beta(est_X, est, delta, R2max)[1]
o_beta = function(est_DX, est_D, delta=1, R2max=1){
coef_DX = est_DX$coefficients[[1]]
R2_DX = est_DX$sq.cor[[1]]
coef_D = est_D$coefficients[[2]]
R2_D = est_D$sq.cor[[1]]
coef_st = coef_DX - delta*(coef_D-coef_DX)*(R2max-R2_DX)/(R2_DX - R2_D)
return(c(round(coef_DX, 2), round(coef_st, 2)))
}
for (delta in delta_list){
for (R2max in R2max_list){
print(o_beta(est_X, est, delta, R2max))
}
}
paste0("[", o_beta(est_X, est, delta, R2max), "]")
paste0("[", toString(o_beta(est_X, est, delta, R2max)), "]")
for (delta in delta_list){
for (R2max in R2max_list){
df_beta[delta, R2max] = paste0("[", toString(o_beta(est_X, est, delta, R2max)), "]")
}
}
df_beta
df_beta[1,1]
df_beta[1:3,1:3]
df_beta[c(0.5),c(0.5)]
df_beta[c("0.5"),c("0.5")]
df_beta[c("0.5", "1"),c("0.5", "1")]
for (delta in delta_list){
for (R2max in R2max_list){
df_beta[toString(delta), toString(R2max)] = paste0("[",
toString(o_beta(est_X, est, delta, R2max)),
"]")
}
}
df_beta
### 4) Robustness Checks for Omitted Variable Bias
est_X = feols(lclaims ~ integration | npi + year, puf)
est = feols(lclaims ~ integration, puf)
delta_list = c(0.5, 1, 1.5, 2)
R2max_list = c(0.5, 0.7, 0.9, 1)
df_beta = data.frame(matrix(ncol = length(R2max_list), nrow = length(delta_list)))
colnames(df_beta) = R2max_list
rownames(df_beta) = delta_list
o_beta = function(est_DX, est_D, delta=1, R2max=1){
coef_DX = est_DX$coefficients[[1]]
R2_DX = est_DX$sq.cor[[1]]
coef_D = est_D$coefficients[[2]]
R2_D = est_D$sq.cor[[1]]
coef_st = coef_DX - delta*(coef_D-coef_DX)*(R2max-R2_DX)/(R2_DX - R2_D)
return(c(round(coef_DX, 2), round(coef_st, 2)))
}
for (delta in delta_list){
for (R2max in R2max_list){
df_beta[toString(delta), toString(R2max)] = paste0("[",
toString(o_beta(est_X, est, delta, R2max)),
"]")
}
}
stargazer(df_beta, summary=FALSE, out="tables/beta_sensitivity.tex")
sum_stats = puf %>%
select(Year=year, Spending=medicare_spending, Claims=claims, Patients=patients) %>%
pivot_longer(c(Spending, Claims, Patients), names_to="Variable", values_to="Value") %>%
group_by(Variable, Year) %>%
summarize(
Mean = round(mean(Value)),
SD = sd(Value),
Min = min(Value),
Max = max(Value))
sum_stats
sum_stats = puf %>%
select(Year=year, Spending=medicare_spending, Claims=claims, Patients=patients) %>%
pivot_longer(c(Spending, Claims, Patients), names_to="Variable", values_to="Value") %>%
group_by(Variable, Year) %>%
summarize(
Mean = round(mean(Value)),
SD = round(sd(Value)),
Min = round(min(Value)),
Max = round(max(Value)))
sum_stats
stargazer(sum_stats, summary=FALSE, rownames=FALSE, out="tables/summary_stats.tex")
est_IV
est_AR
